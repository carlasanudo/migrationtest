name: Run Database Migrations

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "migrations/**"
      - ".github/workflows/migrate.yml"
      - "package.json"
  pull_request:
    branches:
      - main
      - develop
    paths:
      - "migrations/**"
  workflow_dispatch: # Permite ejecutar manualmente

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup PostgreSQL
        run: |
          sudo systemctl start postgresql || true
          docker run -d --name postgres-test \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_USER=sergio \
            -e POSTGRES_DB=migration \
            -p 5432:5432 \
            postgres:15-alpine || docker start postgres-test
          sleep 5

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U sergio; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Check for migrations
        run: |
          if [ -z "$(ls -A migrations/*.js 2>/dev/null)" ]; then
            echo "No migrations found, skipping..."
            exit 0
          fi
          echo "Found migrations:"
          ls -la migrations/

      - name: Run migrations
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: migration
          DB_USER: sergio
          DB_PASSWORD: sergio123
        run: |
          echo "Running database migrations..."
          npm run migrate:up

      - name: Check migration status
        env:
          DATABASE_URL: postgresql://sergio:sergio123@localhost:5432/migration
        run: |
          psql "$DATABASE_URL" -c "SELECT * FROM pgmigrations ORDER BY run_on DESC LIMIT 5;" || echo "Could not query migration status"
        continue-on-error: true

      - name: Cleanup
        if: always()
        run: |
          docker stop postgres-test || true
          docker rm postgres-test || true
